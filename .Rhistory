graphics::text(600,600, 'Not seen for', cex = size)
graphics::text(600,650, y2, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(620, 175, a1, cex = size)
graphics::text(200, 625, a2, cex = size)
graphics::text(1050, 625, a3, cex = size)
y1 <- paste0(tab[1,2],' years')
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])), 'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im2.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(550,400,'Not seen for', cex = size)
graphics::text(550, 450, y1, cex = size)
graphics::text(525,400,'Not seen for', cex = size)
graphics::plot(t, axes = FALSE)
graphics::text(525,400,'Not seen for', cex = size)
graphics::text(525, 450, y1, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(620, 100, a1, cex = size)
graphics::text(620, 125, a1, cex = size)
graphics::text(1050, 600, a2, cex = size)
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(525,400,'Not seen for', cex = size)
graphics::text(525, 450, y1, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(620, 125, a1, cex = size)
graphics::text(1050, 600, a2, cex = size)
graphics::text(620, 150, a1, cex = size)
graphics::plot(t, axes = FALSE)
graphics::text(525,400,'Not seen for', cex = size)
graphics::text(525, 450, y1, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(620, 150, a1, cex = size)
graphics::text(1050, 600, a2, cex = size)
a1 <- switch (as.numeric(as.character(tab[1,1])),'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(650, 350, a1, cex = size*3)
tab2<-tab
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' years')
y2 <- paste0(tab[2,2],' years')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
a6 <- switch (as.numeric(as.character(tab2[3,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' years')
y4 <- paste0(tab2[2,2],' years')
fpath <- system.file("extdata", "im3_3.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from another state prior
graphics::text(100,200,'Not seen for', cex = size)
graphics::text(100, 250, y3, cex = size)
graphics::text(100,420,'Not seen for', cex = size)
graphics::text(100, 470, y4, cex = size)
graphics::text(400,80, 'Seen', cex = size)
graphics::text(400,300, 'Seen', cex = size)
graphics::text(400,580, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
graphics::text(200, 330, a5, cex = size)
graphics::text(200, 560, a6, cex = size)
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' years')
y2 <- paste0(tab[2,2],' years')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' years')
fpath <- system.file("extdata", "im3_2.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from another state prior
graphics::text(100,200,'Not seen for', cex = size)
graphics::text(100, 250, y3, cex = size)
graphics::text(400,80, 'Seen', cex = size)
graphics::text(400,300, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
graphics::text(200, 330, a5, cex = size)
shiny::runApp('smsPOMDP extras/new_dashboard')
tab
tab<-data.frame(c(1,2,3),c(10,2,99))
tab
graphics::par(mfrow = c(1,1))
y1 <- paste0(tab[1,2],' time steps')
y2 <- paste0(tab[2,2],' time steps')
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im3.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(200,200,'Not seen for', cex = size)
graphics::text(200,200,'Not seen for', cex = size)
size <-1
graphics::text(200,200,'Not seen for', cex = size)
graphics::text(200, 250, y1, cex = size)
graphics::text(200,200,'Not seen for', cex = size)
graphics::text(200, 250, y1, cex = size)
graphics::text(500,450, 'Seen', cex = size)
graphics::text(600,600, 'Not seen for', cex = size)
graphics::text(600,650, y2, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(500,450, 'Seen', cex = size)
graphics::text(600,600, 'Not seen for', cex = size)
graphics::text(600,650, y2, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(620, 175, a1, cex = size)
graphics::text(200, 625, a2, cex = size)
graphics::text(1050, 625, a3, cex = size)
y1 <- paste0(tab[1,2],' time steps')
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])), 'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im2.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(525,400,'Not seen for', cex = size)
graphics::text(525, 450, y1, cex = size)
graphics::text(1000,200,'Seen', cex = size)
graphics::text(620, 150, a1, cex = size)
graphics::text(1050, 600, a2, cex = size)
a1 <- switch (as.numeric(as.character(tab[1,1])),'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(650, 350, a1, cex = size*3)
stopifnot(class(tab2)=='data.frame')
tab2 <- tab
n <- nrow(tab)
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
y2 <- paste0(tab[2,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
a6 <- switch (as.numeric(as.character(tab2[3,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' time steps')
y4 <- paste0(tab2[2,2],' time steps')
fpath <- system.file("extdata", "im3_3.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from another state prior
graphics::text(100,200,'Not seen for', cex = size)
graphics::text(100, 250, y3, cex = size)
graphics::text(100,420,'Not seen for', cex = size)
graphics::text(100, 470, y4, cex = size)
graphics::text(400,80, 'Seen', cex = size)
graphics::text(400,300, 'Seen', cex = size)
graphics::text(400,580, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
graphics::text(200, 330, a5, cex = size)
graphics::text(200, 560, a6, cex = size)
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
y2 <- paste0(tab[2,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' time steps')
fpath <- system.file("extdata", "im3_2.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' time steps')
fpath <- system.file("extdata", "im2_2.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(750,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(1150, 520, a2, cex = size)
#text for solution if starting from another state prior
graphics::text(100,200,'Not seen for', cex = size)
graphics::text(100, 250, y3, cex = size)
graphics::text(400,80, 'Seen', cex = size)
graphics::text(400,300, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
graphics::text(200, 330, a5, cex = size)
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
y2 <- paste0(tab[2,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im3_1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from another state prior
graphics::text(400,80, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
if (n == 3){
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
y2 <- paste0(tab[2,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im3_1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from another state prior
graphics::text(400,80, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
} else if (n==2){
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' time steps')
fpath <- system.file("extdata", "im2_1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(750,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(1150, 520, a2, cex = size)
#text for solution if starting from another state prior
graphics::text(400,80, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
} else if (n==1){
a1 <- switch (as.numeric(as.character(tab[1,1])),'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(650, 350, a1, cex = size*3)
}
if (n == 3){
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
a3 <- switch (as.numeric(as.character(tab[3,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
y2 <- paste0(tab[2,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im3_1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(740,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1200,650,'Not seen for', cex = size)
graphics::text(1200, 700, y2, cex = size)
graphics::text(850,450, 'Seen', cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(700, 600, a2, cex = size)
graphics::text(1150, 520, a3, cex = size)
#text for solution if starting from another state prior
graphics::text(400,80, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
} else if (n==2){
#text for solution if starting from c(1,0)
a1 <- switch (as.numeric(as.character(tab[1,1])), 'MANAGE','SURVEY','STOP')
a2 <- switch (as.numeric(as.character(tab[2,1])),'MANAGE','SURVEY','STOP')
y1 <- paste0(tab[1,2],' time steps')
#text for solution if starting from another state prior
a4 <- switch (as.numeric(as.character(tab2[1,1])), 'MANAGE','SURVEY','STOP')
a5 <- switch (as.numeric(as.character(tab2[2,1])),'MANAGE','SURVEY','STOP')
y3 <- paste0(tab2[1,2],' time steps')
fpath <- system.file("extdata", "im2_1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
#text for solution if starting from c(1,0)
graphics::text(750,300,'Not seen for', cex = size)
graphics::text(740, 350, y1, cex = size)
graphics::text(1150,300, 'Seen', cex = size)
graphics::text(920, 200, a1, cex = size)
graphics::text(1150, 520, a2, cex = size)
#text for solution if starting from another state prior
graphics::text(400,80, 'Seen', cex = size)
graphics::text(200, 100, a4, cex = size)
} else if (n==1){
a1 <- switch (as.numeric(as.character(tab[1,1])),'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(650, 350, a1, cex = size*3)
}
a1 <- switch (as.numeric(as.character(tab[1,1])),'MANAGE','SURVEY','STOP')
fpath <- system.file("extdata", "im1.jpg", package="smsPOMDP")
t <- imager::load.image(file=fpath)
graphics::plot(t, axes = FALSE)
graphics::text(650, 350, a1, cex = size*3)
remove.packages("smsPOMDP", lib="~/R/win-library/3.6")
devtools::install_github("conservation-decisions/smsPOMDP", host = "https://api.github.com")
shiny::runApp('smsPOMDP extras/new_dashboard')
runApp('smsPOMDP extras/new_dashboard')
runApp('smsPOMDP extras/new_dashboard')
minigraph(tab = data.frame(c(2,3),c(1,99)), tab2 = data.frame(c(1,2,3), c(10,2,88))
)
minigraph(tab = data.frame(c(1,2,3), c(10,2,88)), tab2 =data.frame(c(2,3),c(1,99)))
library(shinytest)
#write shiny tests for the app
library(shinytest)
shinytest::recordTest("~/smsPOMDP extras/new_dashboard/")
runApp('smsPOMDP extras')
library(shinytest)
#install.packages("devtools")
#devtools::install_github("klutometis/roxygen")
library("devtools")
library(roxygen2)
setwd('~/smsPOMDP/')
usethis::use_package("shiny")
usethis::use_package("stringr")
usethis::use_package("sarsop")
usethis::use_package("readr")
usethis::use_package("graphics")
usethis::use_package("imager")
usethis::use_package("purrr")
usethis::use_package("shinydashboard")
usethis::use_package("htmlwidgets")
usethis::use_package("plotly")
usethis::use_package("bsplus")
document()
?HTML
HTML(".shiny-output-error-validation
{color: red; font-size: large; font-weight: bold;}")
shiny::HTML(".shiny-output-error-validation
{color: red; font-size: large; font-weight: bold;}")
?tags
library(shinytest)
setwd("~/smsPOMDP/inst/app/")
shinytest::recordTest()
shinytest::recordTest()
shinytest::recordTest()
testApp
# Don't run these tests on the CRAN build servers
skip_on_cran()
# Don't run these tests on the CRAN build servers
testthat::skip_on_cran()
# Use compareImages=FALSE because the expected image screenshots were created
# on a Mac, and they will differ from screenshots taken on the CI platform,
# which runs on Linux.
testthat::expect_equal(class(smsPOMDP::run_application()), "shiny.appobj")
appdir <- system.file(package = "smsPOMDP", "app")
library(vdiffr)
remove.packages("smsPOMDP", lib="~/R/win-library/3.6")
devtools::install_github("conservation-decisions/smsPOMDP", host = "https://api.github.com")
install.packages("pkgload")
devtools::install_github("conservation-decisions/smsPOMDP", host = "https://api.github.com")
sessioninfo::session_info()
install.packages(c("dplyr", "ellipse", "ggplot2", "rgdal", "rmarkdown"))
devtools::install_github("conservation-decisions/smsPOMDP", host = "https://api.github.com")
devtools::install_github("conservation-decisions/smsPOMDP")
install.packages("pkgload")
install.packages("pkgload")
devtools::install_github("conservation-decisions/smsPOMDP")
vdiffr::manage_cases("smsPOMDP")
setwd("~")
vdiffr::manage_cases("smsPOMDP")
# Use compareImages=FALSE because the expected image screenshots were created
# on a Mac, and they will differ from screenshots taken on the CI platform,
# which runs on Linux.
testthat::expect_equal(class(smsPOMDP::run_application()), "shiny.appobj")
appdir <- system.file(package = "smsPOMDP", "app")
testApp(appdir, compareImages = FALSE)
remove.packages("smsPOMDP", lib="~/R/win-library/3.6")
library(testthat)
setwd("~/smsPOMDP/")
#to create a new test file
usethis::use_test()#in the current file
#
devtools::document()
devtools::install_github("conservation-decisions/smsPOMDP", host = "https://api.github.com")
library(smsPOMDP)
test_file("tests/testthat/test-check_pomdp.R")
test_file("tests/testthat/test-check_square_stochastic.R")
test_file("tests/testthat/test-check_stochastic.R")
test_file("tests/testthat/test-compute_belief.R")
test_file("tests/testthat/test-graph.R")
test_file("tests/testthat/test-interp_policy.R")
test_file("tests/testthat/test-minigraph.R")
test_file("tests/testthat/test-obs.R")
test_file("tests/testthat/test-past_actions.R")
test_file("tests/testthat/test-past_obs.R")
test_file("tests/testthat/test-plot_stream.R")
test_file("tests/testthat/test-rew.R")
test_file("tests/testthat/test-run_application.R")
test_file("tests/testthat/test-sim.R")
test_file("tests/testthat/test-tab_actions.R")
test_file("tests/testthat/test-tr.R")
test_file("tests/testthat/test-update_belief.R")
test_check("smsPOMDP")
getwd()
library(vdiffr)
setwd("~")
remove.packages("smsPOMDP", lib="~/R/win-library/3.6")
devtools::install_github("conservation-decisions/smsPOMDP")
vdiffr::manage_cases("smsPOMDP")
remove.packages("smsPOMDP", lib="~/R/win-library/3.6")
devtools::install_github("conservation-decisions/smsPOMDP")
library(testthat)
setwd("~/smsPOMDP/")
#
devtools::document()
devtools::install_github("conservation-decisions/smsPOMDP", host = "https://api.github.com")
library(smsPOMDP)
test_file("tests/testthat/test-check_pomdp.R")
test_file("tests/testthat/test-check_square_stochastic.R")
test_file("tests/testthat/test-check_stochastic.R")
test_file("tests/testthat/test-compute_belief.R")
test_file("tests/testthat/test-graph.R")
test_file("tests/testthat/test-interp_policy.R")
test_file("tests/testthat/test-minigraph.R")
test_file("tests/testthat/test-obs.R")
test_file("tests/testthat/test-past_actions.R")
test_file("tests/testthat/test-past_obs.R")
test_file("tests/testthat/test-plot_stream.R")
test_file("tests/testthat/test-rew.R")
test_file("tests/testthat/test-run_application.R")
test_file("tests/testthat/test-sim.R")
test_file("tests/testthat/test-tab_actions.R")
test_file("tests/testthat/test-tr.R")
test_file("tests/testthat/test-update_belief.R")
test_file("tests/testthat/test-run_application.R")
test_check("smsPOMDP")
?test_check
getwd()
test_dir("tests/")
